DB : 데이터의 집합 or 데이터의 저장공간
DBMS : 데이터베이스를 관리/운영하는 역할
ex..
MariaDB, MySQL, Oracle, SQLite

특징
- 데이터 무결성 : 데이터에 오류가 있어서는 안된다
- 데이터 독립성 : DB의 크기를 변경하거나 데이터 파일의 저장소를 변경하더라도, 기존에 작성된 응용 프로그램은 전혀 영향을 받지 않아야 한다. 응용 프로그램과 DB는 서로 독립적인 관계
- 데이터 보안 : DB안의 데이터는 아무나 접근할 수 없다. 권한이 있는 사람만!
- 데이터 중복의 최소화(일관성) : 동일한 데이터가 여러 개 중복되어 저장되는 것을 방지


DB vs FileSystem
소량의 데이터를 처리하기에는 파일시스템이 처리속도가 DBMS보다 훨씬 빠르다 + 비용이 들지 않음


but 파일시스템은 어떤 기능을 구현하기 위해서 기능의 개수만큼 데이터 파일의 숫자가 생겨야 한다....
데이터가 방대해지면 데이터의 중복으로 인한 불일치 발생!!


SQL : DBMS에 데이터를 구착하고 관리하고 활용하기 위해 사용되는 언어!!
표준 SQL은 대부분의 DBMS 제품에서 공통적으로 호환되나 완벽하게 동일하지는 않다!!
SQL은 대소문자를 구분하지 않는다!!
ex..
프로그래밍언어 C, Java, Python....

RDBMS : 관계형 DBMS으로 모든 데이터는 테이블에 저장된다. 테이블의 관계는 기본 키 와 외래 키를 사용해서 맺어줌

기본 키(Primary Key) & 왜래 키(Foreign Key)
기본 키 : 각 행을 구분하는 유일한 열로 기본 키는 중복되어서는 안되며, 비어 있어서도 안된다. 각 테이블에 기본 키가 하나만!! 지정되어야 한다
외래 키 : 두 테이블의 관계를 맺어주는 키 -> 왜래 키를 가지고 부모 테이블로 찾아가면 유일하게 하나의 정보를 얻을 수 있다

DBMS에서 쿼리 = SQL

 
테이블 생성 전 주의점!!

- ★★★★★★개체(DB, 테이블, 열 등) 이름은 영문을 사용!★★★★★★
- 행 데이터 갑산 한글을 사용할 것

MariaDB는 기본적으로 테이블 이름, 열 이름 등을 모두 소문자로 처리한다
ex.. memberTBL = MEMBERTBL = membertbl

(데이터 검색)select 
ex.. select * from membertbl; => membertbl테이블의 모든 열(*)을 보여줘라

(테이블 생성)create
ex.. create table `my testTBL` (id INT); => id(정수)를 열로 갖는 my testTBL 테이블을 생성하라 
중간에 공백이 있는 개체 이름 my testTBL을 사용할 때 '~' 표시와 같이 있는 '`' 백틱으로 묶어주어야 하나의 이름으로 인식한다!!
생성 후 확인을 위해 개체 그룹 선택 후 새로고침 필수!!

(테이블 삭제)drop
ex.. drop table `my testTBL`;


데이터베이스 튜닝 : DB 성능을 향상시키거나 응답하는 시간을 단축시키는 것

뷰 : 가상의 테이블로 사용자의 입장에서 테이블과 동일하게 보이지만, 뷰는 실제 행 데이터를 가지고 있지 않다.
ex.. create view uv_membertbl as select membername, memberaddress from membertbl;
=> membertbl테이블로 부터 membername, memberaddress를 검색해서 uv_membertbl뷰를 생성한다
어떠한 테이블의 정보들 중 개인정보와 같이 중요한 정보들을 제외한 정보를 제공하기 위해 주로 사용!


스토어드 프로시저 : MariaDB에서 제공해주는 프로그래밍 기능 여러 SQL문을 하나로 묶어서 편리하게 사용하는 기능


트리거 : 변화 발생시 변화 전의 정보를 자동으로 다른 곳에 재공해주는 역할로 테이블에 INSERT, UPDATE, DELETE작업이 발생되면 실행되는 코드를 의미한다.
  